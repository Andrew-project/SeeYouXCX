<template>
<page></page>
</template>

<script>
import system from "./static/utils/system";
import toast from "./static/utils/toast.js";
import AppIMDelegate from "./static/delegate/app-im-delegate";

export default {
  config: {
    usingComponents: {},
    pages: [
      "pages/guide/guide",
      "pages/index/index",
      "pages/user/user",
      "pages/user/myRecord",
      "pages/user/feedback",
      "pages/user/setting",
      "pages/issue/new-issue",
      "pages/chat-list/chat-list",
      "pages/chat/chat",
      "pages/plp/plp",
      "pages/user/aboutUs"
    ],
    window: {
      navigationStyle: "custom",
      backgroundTextStyle: "white",
      backgroundColor: "#fbf7f6",
      navigationBarBackgroundColor: "#ffffff",
      navigationBarTitleText: "漂流圈子",
      navigationBarTextStyle: "black",
      navigationBarBorderColor: "rgba(231, 231, 231, 0.6)"
    },
    networkTimeout: {
      request: 10000
    },
    theme: {
      "theme-color": "#ff6630"
    },
    tabBar: {
      borderStyle: "white",
      backgroundColor: "#fff",
      selectedColor: "#e68664",
      list: [
        {
          pagePath: "pages/index/index",
          iconPath: "/static/images/icon_index_tab1.png",
          selectedIconPath: "/static/images/icon_index_tab2.png",
          text: "首页"
        },
        // {
        //   pagePath: "pages/plp/plp",
        //   iconPath: "/static/images/icon_index_tab1.png",
        //   selectedIconPath: "/static/images/icon_index_tab2.png",
        //   text: "漂流瓶"
        // },
        {
          pagePath: "pages/chat-list/chat-list",
          iconPath: "/static/images/icon_index_tab1.png",
          selectedIconPath: "/static/images/icon_index_tab2.png",
          text: "消息"
        },
        {
          pagePath: "pages/user/user",
          iconPath: "/static/images/icon_home_tab1.png",
          selectedIconPath: "/static/images/icon_home_tab2.png",
          text: "我的"
        }
      ]
    }
  },
  globalData: {
    userInfo: {}
  },
  token: "",
  env: "dev",
  hasSocket: false,
  onLaunch(options) {
    system.attachInfo();
    this.appIMDelegate = new AppIMDelegate(this);
    this.appIMDelegate.onLaunch(options);
  },
  getIMHandler() {
    return this.appIMDelegate.getIMHandlerDelegate();
  },
  onUnload() {
    this.appIMDelegate.onHide();
  },
  onShow(options) {
    console.log("是否开启websocket连接：", this.hasSocket);
    if (!this.hasSocket) {
      this.appIMDelegate.onShow(options, () => {
        this.hasSocket = true;
      });
    }
  },
  // http 拦截
  cRequest: function(options) {
    const reqOpt = JSON.parse(JSON.stringify(options));
    reqOpt.success = options.success;
    const isHideToast = options.hideToast;
    const isHideError = options.hideError;
    switch (getApp().env) {
      case "mock":
        var baseURL = "http://yapi.youhujia.com/mock/39/weixin/v1/";
        break;
      case "dev":
        var baseURL = "http://192.168.0.102:3000/api/v1/wx/";
        break;
      case "pro":
        var baseURL = "https://api.yhcloud.youhujia.com/weixin/v1/";
        break;
      default:
        var baseURL = "http://yapi.youhujia.com/mock/39/weixin/v1/";
    }
    let wxReqOption = {
      method: "GET",
      header: {
        Authorization: wx.getStorageSync("openId"),
        "Content-Type": "application/json",
        Accept: "application/json"
      }
    };
    try {
      delete options.hideToast;
      delete options.hideError;
    } catch (e) {}

    options.data = options.data || {};
    options.url = `${baseURL}${options.url}`;

    Object.assign(wxReqOption, options);
    Object.assign(wxReqOption, {
      success: function(res) {
        toast.hidden();
        console.info("response:", res.data);
        const resp = res.data;
        if (resp && resp.result && resp.result.success) {
          options.success && options.success(resp.data || {});
        } else {
          if (
            resp.status === 500 ||
            resp.status === 405 ||
            resp.status === 404
          ) {
            toast.show("warn", resp.error);
          } else if (resp.result.code == 401) {
            toast.show("warn", "登录失败", 2000, () => {});
          } else if (resp.result.code == 500) {
            toast.show("warn", "服务器错误");
          } else if (!resp.result.success && resp.result.displayMsg) {
            toast.show("warn", resp.result.displayMsg);
          }
          options.fail && options.fail(res);
        }
      },
      fail: function(res) {
        console.warn(res);
        toast.hidden();
        toast.show("warn", "请求失败");

        setTimeout(() => {
          toast.hidden();
        }, 4000);
        options.error && options.fail(res.data);
      },
      complete: function(res) {
        options.complete && options.complete(res.data);
      }
    });

    if (!isHideToast) {
      toast.showNormalLoading(
        wxReqOption.method == "GET" ? "加载中..." : "请求中..."
      );
    }
    wx.request(wxReqOption);
  },
  setTokenFromOptions(options) {
    if (options.token) {
      getApp().token = options.token;
    }
  }
};
</script>

<style lang="less">
@import "./static/styles/index.less";
</style>

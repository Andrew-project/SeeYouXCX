<template>
<nav-bar nav-title="编辑我的信息" is-back="true"></nav-bar>
<form bindsubmit="formSubmit" report-submit="true">
    <view class="text-center padding-top-sm padding-bottom-xsm background-color-white margin-bottom-xs" bindtap="chooseImage">
        <image src="{{userInfo.avatarUrl || defalutAvatar}}" name="avatarUrl" alt="" class="avatar-img"></image>
        <view class='h3 margin-top-xs'>修改头像</view>
    </view>
    <view class="padding-left-xsm margin-bottom-md background-color-white border-line-bottom border-color-global-base">
        <view class="clearfloat  padding-right-xsm border-line-bottom border-color-global-base background-color-white h4">
            <view class="float-left h4 line-height-100">昵称：</view>
            <view class="float-left text-left ">
                <input type="text" name="nickName" value="{{userInfo.nickName}}" placeholder-class="placeholder-class" placeholder="" class="text-left input font-color-global-lighter" />
                </view>
            </view>
            <view class="clearfloat padding-right-xs background-color-white h4">
                <view class="float-left h4 line-height-100">性别：</view>
                <ui-icon class="float-right margin-left-xxs font-color-global-lighter icon-xxs line-height-100 icon-position" type="fanhui"></ui-icon>
                <picker bindchange="bindGenderChange" value="{{gender}}" range="{{genderRange}}" name="gender" class='float-left'>
                    <view class="picker text-left line-height-100 font-color-global-lighter">
                        {{genderRange[gender]}}
                    </view>
                </picker>
            </view>

            <view class="clearfloat  padding-right-xs border-line-top border-color-global-base background-color-white h4">
                <view class="float-left h4 line-height-100">年龄：</view>
                <ui-icon class="float-right margin-left-xxs font-color-global-lighter icon-xxs line-height-100 icon-position" type="fanhui"></ui-icon>
                <picker value="{{ageIndex}}" bindchange="bindAgeChange" name="ageIndex" range="{{ageRange}}" class='float-left'>
                    <view class="picker line-height-100 text-left font-color-global-lighter">
                        {{ageRange[ageIndex]}}
                    </view>
                </picker>
            </view>
            <view class="clearfloat  padding-right-xsm border-line-top border-color-global-base  background-color-white h4" style="position: relative;">
                <view class="float-left h4 line-height-100">个性签名：</view>
                <view class="float-left text-left">
                    <input type="text" name="description" value="{{userInfo.description}}" bindinput="bindInputDesc" bindblur="bindInputDesc" placeholder-class="placeholder-class" maxlength="16" placeholder="" class="text-left input font-color-global-lighter" />
                </view>
                <view class="font-color-global-lightest h4 word-count">{{16 - userInfo.description.length > -1 ? 16 - userInfo.description.length : 0}}</view>
                </view>
            </view>
            <button formType="submit" type="primary" size="default">保存</button>
</form>
</template>

<script>
const app = getApp();
import toast from "../../static/utils/toast.js";

export default {
  config: {
    disableScroll: false,
    usingComponents: {
      "nav-bar": "../../packages/navBar/nav-bar"
    }
  },
  data: {
    genderRange: ["女","男"],
    gender: 0,
    ageRange: [],
    ageIndex: 10,
    defalutAvatar: "",
    description: ""
  },
  onLoad: function() {
    let ages = ["14岁以下"];
    for (let i = 14; i < 51; i++) {
      ages.push(`${i}`);
    }
    this.setData({
      ageRange: [...ages, "50岁以上"]
    });
    try {
      const user = wx.getStorageSync("userInfo");
      if (user) {
        const ageRange = this.data.ageRange;
        this.setData({
          gender: user.gender == undefined ? 0: user.gender,
          ageIndex: user.age == undefined ? 10: ageRange.findIndex(age => age == user.age+''),
          userInfo: user
        });
      }
    } catch (e) {}
  },
  onShow: function(e) {
    
  },
  chooseImage: function() {
    const that = this;
    switch (app.env) {
      case "dev":
        var baseURL = "http://192.168.0.102:3000/api/v1/open/";
        break;
      case "pro":
        var baseURL = "https://api.yhcloud.youhujia.com/";
        break;
      default:
        var baseURL = "http://192.168.0.102:3000/api/v1/open/";
        break;
    }
    wx.chooseImage({
      count: 1, // 默认9
      sizeType: ["compressed"],
      success: res => {
        let tempFilePath = res.tempFilePaths[0];
       wx.uploadFile({
            url: baseURL + `file/uploadFile?folderName=image`,
            filePath: tempFilePath,
            name: "file",
            header: {
              Accept: "application/json"
            },
            success: function(res) {
              const imgData = JSON.parse(res.data);
              that.setData({
                'userInfo.avatarUrl': imgData.data
              });
            }
          });
      },
      complete: function() {}
    });
  },
  bindGenderChange: function(e) {
    this.setData({
      gender: parseInt(e.detail.value)
    });
  },
  bindAgeChange: function(e) {
    this.setData({
      ageIndex: parseInt(e.detail.value)
    });
  },
  bindInputDesc: function(e) {
    this.setData({
      description: e.detail.value
    });
  },
  formSubmit: function(e) {
    console.log(e);
    console.log(this.data);
    // wx.navigateBack({
    //   delta: 1 // 回退前 delta(默认为1) 页面
    // });
    const value = e.detail.value;
    app.cRequest({
      url: 'user/information',
      method: 'post',
      data: {
        nickName: value.nickName,
        description: value.description,
        gender: value.gender,
        age: parseInt(this.data.ageRange[value.ageIndex]),
        avatarUrl: this.data.userInfo.avatarUrl
      },
      success: (res) => {
        toast.show('success', '更新成功', 2000, () => {
            wx.setStorageSync("userInfo", res);
            wx.navigateBack({
              delta: 1
            })
        })
      }
    })
  }
};
</script>

<style lang="less" scoped>
.avatar-img {
  width: 100rpx;
  height: 100rpx;
  margin-left: 326rpx;
  border-radius: 50%;
}

.input {
  height: 100rpx;
  min-width: 550rpx;
  max-width: 600rpx;
}

.line-height-100 {
  line-height: 100rpx;
}

.picker-height {
  height: 100rpx;
}

picker {
  width: 617rpx;
}

button {
  margin-left: 50rpx;
  width: 650rpx;
  margin-top: 80rpx;
}

.word-count {
  position: absolute;
  right: 6rpx;
  top: 67rpx;
}

.icon-position {
  position: absolute;
  right: 10rpx;
}
</style>

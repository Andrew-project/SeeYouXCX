<template>
<view>
  <ui-nav-bar slot="nav-bar" class="nav_bar" custom-style="{{ {backgroundColor:'#fff'} }}">
      <ui-row height="46">
        <ui-col vertical-align="middle">
          <view class="text-center">消息</view>
        </ui-col>
      </ui-row>
    </ui-nav-bar>
    <view style="height:{{NAV_HEIGHT}}"></view>
</view>
<block wx:for="{{conversations}}" wx:key="conversationId">
	<chat-item item="{{item}}" bindtoChat="toChat"></chat-item>
</block>
</template>
<script>
const app = getApp();
export default {
  config: {
    usingComponents: {
      "chat-item": "./view/chat-item"
    }
  },
  data: {
    conversations: [],
    NAV_HEIGHT: wx.STATUS_BAR_HEIGHT + wx.DEFAULT_HEADER_HEIGHT + "px"
  },
  onLoad: function(options) {},
  toChat: function(e) {
    console.log(e);
    let item = e.detail.currentTarget.dataset.item;
    delete item.latestMsg;
    delete item.unread;
    delete item.content;
    wx.navigateTo({
      url: `../chat/chat?friend=${JSON.stringify(item)}`
    });
  },
  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function() {
    app.getIMHandler().setOnReceiveMessageListener({
      listener: msg => {
        console.log("会话列表", msg);
        msg.type === "get-conversations" &&
          this.setData({
            conversations: msg.conversations.map(
              item => {
                console.warn(item);
                item = Object.assign(item);
                return item;
              }
              // this.getConversationsItem(item)
            )
          });
      }
    });
    app.getIMHandler().sendMsg({
      content: {
        type: "get-conversations",
        userId: getApp().globalData.userInfo.userId
      },
      success: () => {
        console.log("获取会话列表消息发送成功");
      },
      fail: res => {
        console.log("获取会话列表失败", res);
      }
    });
  },
  getConversationsItem(item) {
    // let { latestMsg, ...msg } = item;
    // return Object.assign(msg, JSON.parse(latestMsg));
  }
};
</script>
<style lang="less" scoped>
</style>
